
// Главные функции и процедуры
Процедура НастроитьПостроительОбщейИнформации(ПостроительОбъект, УзелОбмена) Экспорт
	
	МассивДопустимыхТиповНоменклатуры = Новый Массив;
	МассивДопустимыхТиповНоменклатуры.Добавить(Перечисления.ТипыНоменклатуры.Товар);
	МассивДопустимыхТиповНоменклатуры.Добавить(Перечисления.ТипыНоменклатуры.Услуга);
	
	Если УзелОбмена.ВыгружатьНаборы тогда
		МассивДопустимыхТиповНоменклатуры.Добавить(Перечисления.ТипыНоменклатуры.Комплект);
		МассивДопустимыхТиповНоменклатуры.Добавить(Перечисления.ТипыНоменклатуры.Набор);
	КонецЕсли;
	
	ПостроительОбъект.Параметры.Вставить("МассивДопустимыхТиповНоменклатуры", МассивДопустимыхТиповНоменклатуры);
	ПостроительОбъект.Параметры.Вставить("Узел", УзелОбмена.Ссылка);
	ПостроительОбъект.Параметры.Вставить("ПолнаяВыгрузка", (НЕ УзелОбмена.ВыгружатьТолькоИзменения ИЛИ УзелОбмена.ВыполнятьПолнуюВыгрузкуПринудительно));
	ПостроительОбъект.Параметры.Вставить("КлассифицироватьПоЦеновымГруппам", УзелОбмена.КлассифицироватьПоЦеновымГруппам);
	ПостроительОбъект.Параметры.Вставить("НадоВыгружатьТовары", УзелОбмена.ОбменТоварами);
	
	ПостроительОбъект.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВидыНоменклатуры.Ссылка КАК ВидНоменклатуры,
	|	ВидыНоменклатуры.ТипНоменклатуры КАК ТипНоменклатуры
	|ПОМЕСТИТЬ ВремВидыНоменклатуры
	|ИЗ
	|	Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|ГДЕ
	|	ВидыНоменклатуры.ТипНоменклатуры В(&МассивДопустимыхТиповНоменклатуры)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	Номенклатура.Ссылка КАК Номенклатура,
	|	Номенклатура.Наименование
	|ПОМЕСТИТЬ ВремВсяНоменклатура
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВремВидыНоменклатуры КАК ВремВидыНоменклатуры
	|		ПО (ВремВидыНоменклатуры.ВидНоменклатуры = Номенклатура.ВидНоменклатуры)
	|			И (НЕ Номенклатура.ЭтоГруппа)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КатегорииОбъектов КАК КатегорииОбъектов
	|		ПО Номенклатура.Ссылка = КатегорииОбъектов.Объект
	|ГДЕ
	|	(НЕ &КлассифицироватьПоЦеновымГруппам
	|			ИЛИ &КлассифицироватьПоЦеновымГруппам
	|				И НЕ Номенклатура.ЦеноваяГруппа = ЗНАЧЕНИЕ(Справочник.ЦеновыеГруппы.ПустаяСсылка))
	|	И ВЫБОР
	|			КОГДА &ПолнаяВыгрузка
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ Номенклатура.Ссылка В
	|					(ВЫБРАТЬ
	|						НоменклатураИзменения.Ссылка
	|					ИЗ
	|						Справочник.Номенклатура.Изменения КАК НоменклатураИзменения
	|					ГДЕ
	|						НоменклатураИзменения.Узел = &Узел)
	|		КОНЕЦ
	|	И &НадоВыгружатьТовары = ИСТИНА
	|	И Номенклатура.ЭтоГруппа = ЛОЖЬ
	|{ГДЕ
	|	Номенклатура.Ссылка.* КАК Номенклатура,
	|	(ЕСТЬNULL(КатегорииОбъектов.Категория, ЗНАЧЕНИЕ(Справочник.КатегорииОбъектов.ПустаяСсылка))).* КАК КатегорияНоменклатуры,
	|	Номенклатура.ОсновноеИзображение.*}
	|{УПОРЯДОЧИТЬ ПО
	|	Номенклатура.*}
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремВидыНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ВремВсяНоменклатура.Номенклатура КАК Номенклатура,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика
	|ПОМЕСТИТЬ ВремНоменклатураПлюсХарактеристики
	|ИЗ
	|	ВремВсяНоменклатура КАК ВремВсяНоменклатура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВремВсяНоменклатура.Номенклатура,
	|	ХарактеристикиНоменклатуры.Ссылка
	|ИЗ
	|	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВремВсяНоменклатура КАК ВремВсяНоменклатура
	|		ПО ХарактеристикиНоменклатуры.Владелец = ВремВсяНоменклатура.Номенклатура
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Склады.Ссылка КАК Склад,
	|	""Склад"" КАК ТипОбъекта
	|ПОМЕСТИТЬ ВремСклады
	|ИЗ
	|	Справочник.Склады КАК Склады
	|ГДЕ
	|	НЕ Склады.ПометкаУдаления
	|	И НЕ Склады.ЭтоГруппа
	|{ГДЕ
	|	Склады.Ссылка.* КАК Склад}
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Склады.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Остатки.Номенклатура,
	|	Остатки.ХарактеристикаНоменклатуры,
	|	Остатки.КоличествоОстаток
	|ПОМЕСТИТЬ ВремТоварыНаСкладах
	|ИЗ
	|	РегистрНакопления.ТоварыНаСкладах.Остатки(
	|			,
	|			Номенклатура В
	|					(ВЫБРАТЬ
	|						ВремВсяНоменклатура.Номенклатура
	|					ИЗ
	|						ВремВсяНоменклатура)
	|				И Склад В
	|					(ВЫБРАТЬ
	|						ВремСклады.Склад
	|					ИЗ
	|						ВремСклады)) КАК Остатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Остатки.Номенклатура,
	|	Остатки.ХарактеристикаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Остатки.Номенклатура,
	|	Остатки.ХарактеристикаНоменклатуры,
	|	Остатки.КоличествоОстаток
	|ПОМЕСТИТЬ ВремТоварыВРознице
	|ИЗ
	|	РегистрНакопления.ТоварыВРознице.Остатки(
	|			,
	|			Номенклатура В
	|					(ВЫБРАТЬ
	|						ВремВсяНоменклатура.Номенклатура
	|					ИЗ
	|						ВремВсяНоменклатура)
	|				И Склад В
	|					(ВЫБРАТЬ
	|						ВремСклады.Склад
	|					ИЗ
	|						ВремСклады)) КАК Остатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Остатки.Номенклатура,
	|	Остатки.ХарактеристикаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Остатки.Номенклатура,
	|	Остатки.ХарактеристикаНоменклатуры,
	|	Остатки.КоличествоОстаток
	|ПОМЕСТИТЬ ВремТоварыВНТТ
	|ИЗ
	|	РегистрНакопления.ТоварыВНТТ.Остатки(
	|			,
	|			Номенклатура В
	|					(ВЫБРАТЬ
	|						ВремВсяНоменклатура.Номенклатура
	|					ИЗ
	|						ВремВсяНоменклатура)
	|				И Склад В
	|					(ВЫБРАТЬ
	|						ВремСклады.Склад
	|					ИЗ
	|						ВремСклады)) КАК Остатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Остатки.Номенклатура,
	|	Остатки.ХарактеристикаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Остатки.Номенклатура,
	|	Остатки.ХарактеристикаНоменклатуры,
	|	Остатки.КоличествоОстаток
	|ПОМЕСТИТЬ ВремТоварыВРезервеНаСкладах
	|ИЗ
	|	РегистрНакопления.ТоварыВРезервеНаСкладах.Остатки(
	|			,
	|			Номенклатура В
	|					(ВЫБРАТЬ
	|						ВремВсяНоменклатура.Номенклатура
	|					ИЗ
	|						ВремВсяНоменклатура)
	|				И Склад В
	|					(ВЫБРАТЬ
	|						ВремСклады.Склад
	|					ИЗ
	|						ВремСклады)) КАК Остатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Остатки.Номенклатура,
	|	Остатки.ХарактеристикаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Остатки.Номенклатура,
	|	Остатки.ХарактеристикаНоменклатуры,
	|	Остатки.КоличествоОстаток
	|ПОМЕСТИТЬ ВремТоварыКПередачеСоСкладов
	|ИЗ
	|	РегистрНакопления.ТоварыКПередачеСоСкладов.Остатки(
	|			,
	|			Номенклатура В
	|					(ВЫБРАТЬ
	|						ВремВсяНоменклатура.Номенклатура
	|					ИЗ
	|						ВремВсяНоменклатура)
	|				И Склад В
	|					(ВЫБРАТЬ
	|						ВремСклады.Склад
	|					ИЗ
	|						ВремСклады)) КАК Остатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Остатки.Номенклатура,
	|	Остатки.ХарактеристикаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВремНоменклатураПлюсХарактеристики.Номенклатура КАК Номенклатура,
	|	ВремНоменклатураПлюсХарактеристики.Характеристика КАК Характеристика,
	|	ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(ТоварыВРозницеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(ТоварыВНТТОстатки.КоличествоОстаток, 0) - ЕСТЬNULL(ТоварыВРезервеНаСкладахОстатки.КоличествоОстаток, 0) - ЕСТЬNULL(ТоварыКПередачеСоСкладовОстатки.КоличествоОстаток, 0) КАК Остаток
	|ПОМЕСТИТЬ ВремНоменклатураСХарактеристиками
	|ИЗ
	|	ВремНоменклатураПлюсХарактеристики КАК ВремНоменклатураПлюсХарактеристики
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВремТоварыНаСкладах КАК ТоварыНаСкладахОстатки
	|		ПО ВремНоменклатураПлюсХарактеристики.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура
	|			И ВремНоменклатураПлюсХарактеристики.Характеристика = ТоварыНаСкладахОстатки.ХарактеристикаНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВремТоварыВРознице КАК ТоварыВРозницеОстатки
	|		ПО ВремНоменклатураПлюсХарактеристики.Номенклатура = ТоварыВРозницеОстатки.Номенклатура
	|			И ВремНоменклатураПлюсХарактеристики.Характеристика = ТоварыВРозницеОстатки.ХарактеристикаНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВремТоварыВНТТ КАК ТоварыВНТТОстатки
	|		ПО ВремНоменклатураПлюсХарактеристики.Номенклатура = ТоварыВНТТОстатки.Номенклатура
	|			И ВремНоменклатураПлюсХарактеристики.Характеристика = ТоварыВНТТОстатки.ХарактеристикаНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВремТоварыВРезервеНаСкладах КАК ТоварыВРезервеНаСкладахОстатки
	|		ПО ВремНоменклатураПлюсХарактеристики.Номенклатура = ТоварыВРезервеНаСкладахОстатки.Номенклатура
	|			И ВремНоменклатураПлюсХарактеристики.Характеристика = ТоварыВРезервеНаСкладахОстатки.ХарактеристикаНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВремТоварыКПередачеСоСкладов КАК ТоварыКПередачеСоСкладовОстатки
	|		ПО ВремНоменклатураПлюсХарактеристики.Номенклатура = ТоварыКПередачеСоСкладовОстатки.Номенклатура
	|			И ВремНоменклатураПлюсХарактеристики.Характеристика = ТоварыКПередачеСоСкладовОстатки.ХарактеристикаНоменклатуры
	|{ГДЕ
	|	(ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(ТоварыВРозницеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(ТоварыВНТТОстатки.КоличествоОстаток, 0) - ЕСТЬNULL(ТоварыВРезервеНаСкладахОстатки.КоличествоОстаток, 0) - ЕСТЬNULL(ТоварыКПередачеСоСкладовОстатки.КоличествоОстаток, 0)) КАК Остаток}
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремНоменклатураПлюсХарактеристики
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремТоварыНаСкладах
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремТоварыВРознице
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремТоварыВНТТ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремТоварыВРезервеНаСкладах
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремТоварыКПередачеСоСкладов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВремНоменклатураСХарактеристиками.Номенклатура,
	|	ВремНоменклатураСХарактеристиками.Номенклатура.БазоваяЕдиницаИзмерения КАК БазоваяЕдиницаИзмерения,
	|	""ТоварДляГруппы"" КАК ТипОбъекта
	|ПОМЕСТИТЬ ВремНоменклатураРазличные
	|ИЗ
	|	ВремНоменклатураСХарактеристиками КАК ВремНоменклатураСХарактеристиками
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВремНоменклатураСХарактеристиками.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремВсяНоменклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремНоменклатураСХарактеристиками
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТипыЦенНоменклатуры.Ссылка КАК ТипЦены,
	|	""ТипЦены"" КАК ТипОбъекта
	|ПОМЕСТИТЬ ВремТипыЦен
	|ИЗ
	|	Справочник.ТипыЦенНоменклатуры КАК ТипыЦенНоменклатуры
	|{ГДЕ
	|	ТипыЦенНоменклатуры.Ссылка.* КАК ТипЦен}
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТипыЦенНоменклатуры.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	""ЕдиницаИзмерения"" КАК ТипОбъекта,
	|	ВремНоменклатураРазличные.БазоваяЕдиницаИзмерения
	|ПОМЕСТИТЬ ВремЕдиницыИзмерения
	|ИЗ
	|	ВремНоменклатураРазличные КАК ВремНоменклатураРазличные
	|ГДЕ
	|	ВремНоменклатураРазличные.БазоваяЕдиницаИзмерения <> ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВремНоменклатураРазличные.Номенклатура КАК Объект,
	|	ВремНоменклатураРазличные.ТипОбъекта
	|ИЗ
	|	ВремНоменклатураРазличные КАК ВремНоменклатураРазличные
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВремСклады.Склад,
	|	ВремСклады.ТипОбъекта
	|ИЗ
	|	ВремСклады КАК ВремСклады
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВремТипыЦен.ТипЦены,
	|	ВремТипыЦен.ТипОбъекта
	|ИЗ
	|	ВремТипыЦен КАК ВремТипыЦен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВремЕдиницыИзмерения.БазоваяЕдиницаИзмерения,
	|	ВремЕдиницыИзмерения.ТипОбъекта
	|ИЗ
	|	ВремЕдиницыИзмерения КАК ВремЕдиницыИзмерения
	|{УПОРЯДОЧИТЬ ПО
	|	Объект.*}
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремСклады
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремНоменклатураРазличные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремТипыЦен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремЕдиницыИзмерения";
	
КонецПроцедуры

Процедура НастроитьПостроительСвойств(ПостроительОбъект, УзелОбмена) Экспорт
	
	ПостроительОбъект.Параметры.Вставить("Узел", УзелОбмена.Ссылка);
	ПостроительОбъект.Параметры.Вставить("ПолнаяВыгрузка", (НЕ УзелОбмена.ВыгружатьТолькоИзменения ИЛИ УзелОбмена.ВыполнятьПолнуюВыгрузкуПринудительно));
	
	ПостроительОбъект.Параметры.Вставить("НадоВыгружатьСвойства", УзелОбмена.ВыгружатьСвойства);
	
	ПостроительОбъект.Текст = "ВЫБРАТЬ
	|	СвойстваОбъектов.Ссылка КАК Объект,
	|	""Свойство"" КАК ТипОбъекта
	|ИЗ
	|	ПланВидовХарактеристик.СвойстваОбъектов КАК СвойстваОбъектов
	|ГДЕ
	|	&НадоВыгружатьСвойства = ИСТИНА
	|	И СвойстваОбъектов.Б_Идентификатор <> ""СвойствоЗаказа""
	|	И ВЫБОР
	|			КОГДА &ПолнаяВыгрузка
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ СвойстваОбъектов.Ссылка В
	|					(ВЫБРАТЬ
	|						СвойстваОбъектовИзменения.Ссылка
	|					ИЗ
	|						ПланВидовХарактеристик.СвойстваОбъектов.Изменения КАК СвойстваОбъектовИзменения
	|					ГДЕ
	|						СвойстваОбъектовИзменения.Узел = &Узел)
	|		КОНЕЦ
	|	И (СвойстваОбъектов.НазначениеСвойства = ЗНАЧЕНИЕ(ПланВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Номенклатура) ИЛИ СвойстваОбъектов.НазначениеСвойства = ЗНАЧЕНИЕ(ПланВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ХарактеристикиНоменклатуры))
	|{ГДЕ
	|	СвойстваОбъектов.Ссылка.* КАК СвойствоНоменклатуры}";
	
КонецПроцедуры


Процедура НастроитьПостроительСвойствДляТоваров(ПостроительОбъект, УзелОбмена) Экспорт
	
	ПостроительОбъект.Текст = "ВЫБРАТЬ
	|	СвойстваОбъектов.Ссылка КАК Объект,
	|	""Свойство"" КАК ТипОбъекта
	|ИЗ
	|	ПланВидовХарактеристик.СвойстваОбъектов КАК СвойстваОбъектов
	|ГДЕ
	|	СвойстваОбъектов.Б_Идентификатор <> ""СвойствоЗаказа""
	|	И (СвойстваОбъектов.НазначениеСвойства = ЗНАЧЕНИЕ(ПланВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Номенклатура) ИЛИ СвойстваОбъектов.НазначениеСвойства = ЗНАЧЕНИЕ(ПланВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ХарактеристикиНоменклатуры))
	|{ГДЕ
	|	СвойстваОбъектов.Ссылка.* КАК СвойствоНоменклатуры}";
	
КонецПроцедуры


Процедура НастроитьПостроительТоваров(ПостроительОбъект, УзелОбмена) Экспорт
	
	МассивДопустимыхТиповНоменклатуры = Новый Массив;
	МассивДопустимыхТиповНоменклатуры.Добавить(Перечисления.ТипыНоменклатуры.Товар);
	МассивДопустимыхТиповНоменклатуры.Добавить(Перечисления.ТипыНоменклатуры.Услуга);
	
	Если УзелОбмена.ВыгружатьНаборы тогда
		МассивДопустимыхТиповНоменклатуры.Добавить(Перечисления.ТипыНоменклатуры.Комплект);
		МассивДопустимыхТиповНоменклатуры.Добавить(Перечисления.ТипыНоменклатуры.Набор);
	КонецЕсли;
	
	ПостроительОбъект.Параметры.Вставить("МассивДопустимыхТиповНоменклатуры", МассивДопустимыхТиповНоменклатуры);
	ПостроительОбъект.Параметры.Вставить("Узел", УзелОбмена.Ссылка);
	ПостроительОбъект.Параметры.Вставить("ПолнаяВыгрузка", (НЕ УзелОбмена.ВыгружатьТолькоИзменения ИЛИ УзелОбмена.ВыполнятьПолнуюВыгрузкуПринудительно));
	ПостроительОбъект.Параметры.Вставить("КлассифицироватьПоЦеновымГруппам", УзелОбмена.КлассифицироватьПоЦеновымГруппам);
	
	ПостроительОбъект.Параметры.Вставить("НадоВыгружатьТовары", УзелОбмена.ОбменТоварами);
	ПостроительОбъект.Параметры.Вставить("НадоВыгружатьСвойства", УзелОбмена.ВыгружатьСвойства);
	
	ПостроительОбъект.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВидыНоменклатуры.Ссылка КАК ВидНоменклатуры,
	|	ВидыНоменклатуры.ТипНоменклатуры КАК ТипНоменклатуры
	|ПОМЕСТИТЬ ВремВидыНоменклатуры
	|ИЗ
	|	Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|ГДЕ
	|	ВидыНоменклатуры.ТипНоменклатуры В(&МассивДопустимыхТиповНоменклатуры)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	Номенклатура.Ссылка КАК Номенклатура,
	|	Номенклатура.Наименование
	|ПОМЕСТИТЬ ВремВсяНоменклатура
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВремВидыНоменклатуры КАК ВремВидыНоменклатуры
	|		ПО (ВремВидыНоменклатуры.ВидНоменклатуры = Номенклатура.ВидНоменклатуры)
	|			И (НЕ Номенклатура.ЭтоГруппа)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КатегорииОбъектов КАК КатегорииОбъектов
	|		ПО Номенклатура.Ссылка = КатегорииОбъектов.Объект
	|ГДЕ
	|	(НЕ &КлассифицироватьПоЦеновымГруппам
	|			ИЛИ &КлассифицироватьПоЦеновымГруппам
	|				И НЕ Номенклатура.ЦеноваяГруппа = ЗНАЧЕНИЕ(Справочник.ЦеновыеГруппы.ПустаяСсылка))
	|	И ВЫБОР
	|			КОГДА &ПолнаяВыгрузка
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ Номенклатура.Ссылка В
	|					(ВЫБРАТЬ
	|						НоменклатураИзменения.Ссылка
	|					ИЗ
	|						Справочник.Номенклатура.Изменения КАК НоменклатураИзменения
	|					ГДЕ
	|						НоменклатураИзменения.Узел = &Узел)
	|		КОНЕЦ
	|	И &НадоВыгружатьТовары = ИСТИНА
	|	И Номенклатура.ЭтоГруппа = ЛОЖЬ
	|{ГДЕ
	|	Номенклатура.Ссылка.* КАК Номенклатура,
	|	(ЕСТЬNULL(КатегорииОбъектов.Категория, ЗНАЧЕНИЕ(Справочник.КатегорииОбъектов.ПустаяСсылка))).* КАК КатегорияНоменклатуры,
	|	Номенклатура.ОсновноеИзображение.*}
	|{УПОРЯДОЧИТЬ ПО
	|	Номенклатура.*}
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремВидыНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ВремВсяНоменклатура.Номенклатура КАК Номенклатура,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика
	|ПОМЕСТИТЬ ВремНоменклатураПлюсХарактеристики
	|ИЗ
	|	ВремВсяНоменклатура КАК ВремВсяНоменклатура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВремВсяНоменклатура.Номенклатура,
	|	ХарактеристикиНоменклатуры.Ссылка
	|ИЗ
	|	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВремВсяНоменклатура КАК ВремВсяНоменклатура
	|		ПО ХарактеристикиНоменклатуры.Владелец = ВремВсяНоменклатура.Номенклатура
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Склады.Ссылка КАК Склад,
	|	""Склад"" КАК ТипОбъекта
	|ПОМЕСТИТЬ ВремСклады
	|ИЗ
	|	Справочник.Склады КАК Склады
	|ГДЕ
	|	НЕ Склады.ПометкаУдаления
	|	И НЕ Склады.ЭтоГруппа
	|{ГДЕ
	|	Склады.Ссылка.* КАК Склад}
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Склады.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Остатки.Номенклатура,
	|	Остатки.ХарактеристикаНоменклатуры,
	|	Остатки.КоличествоОстаток
	|ПОМЕСТИТЬ ВремТоварыНаСкладах
	|ИЗ
	|	РегистрНакопления.ТоварыНаСкладах.Остатки(
	|			,
	|			Номенклатура В
	|					(ВЫБРАТЬ
	|						ВремВсяНоменклатура.Номенклатура
	|					ИЗ
	|						ВремВсяНоменклатура)
	|				И Склад В
	|					(ВЫБРАТЬ
	|						ВремСклады.Склад
	|					ИЗ
	|						ВремСклады)) КАК Остатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Остатки.Номенклатура,
	|	Остатки.ХарактеристикаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Остатки.Номенклатура,
	|	Остатки.ХарактеристикаНоменклатуры,
	|	Остатки.КоличествоОстаток
	|ПОМЕСТИТЬ ВремТоварыВРознице
	|ИЗ
	|	РегистрНакопления.ТоварыВРознице.Остатки(
	|			,
	|			Номенклатура В
	|					(ВЫБРАТЬ
	|						ВремВсяНоменклатура.Номенклатура
	|					ИЗ
	|						ВремВсяНоменклатура)
	|				И Склад В
	|					(ВЫБРАТЬ
	|						ВремСклады.Склад
	|					ИЗ
	|						ВремСклады)) КАК Остатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Остатки.Номенклатура,
	|	Остатки.ХарактеристикаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Остатки.Номенклатура,
	|	Остатки.ХарактеристикаНоменклатуры,
	|	Остатки.КоличествоОстаток
	|ПОМЕСТИТЬ ВремТоварыВНТТ
	|ИЗ
	|	РегистрНакопления.ТоварыВНТТ.Остатки(
	|			,
	|			Номенклатура В
	|					(ВЫБРАТЬ
	|						ВремВсяНоменклатура.Номенклатура
	|					ИЗ
	|						ВремВсяНоменклатура)
	|				И Склад В
	|					(ВЫБРАТЬ
	|						ВремСклады.Склад
	|					ИЗ
	|						ВремСклады)) КАК Остатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Остатки.Номенклатура,
	|	Остатки.ХарактеристикаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Остатки.Номенклатура,
	|	Остатки.ХарактеристикаНоменклатуры,
	|	Остатки.КоличествоОстаток
	|ПОМЕСТИТЬ ВремТоварыВРезервеНаСкладах
	|ИЗ
	|	РегистрНакопления.ТоварыВРезервеНаСкладах.Остатки(
	|			,
	|			Номенклатура В
	|					(ВЫБРАТЬ
	|						ВремВсяНоменклатура.Номенклатура
	|					ИЗ
	|						ВремВсяНоменклатура)
	|				И Склад В
	|					(ВЫБРАТЬ
	|						ВремСклады.Склад
	|					ИЗ
	|						ВремСклады)) КАК Остатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Остатки.Номенклатура,
	|	Остатки.ХарактеристикаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Остатки.Номенклатура,
	|	Остатки.ХарактеристикаНоменклатуры,
	|	Остатки.КоличествоОстаток
	|ПОМЕСТИТЬ ВремТоварыКПередачеСоСкладов
	|ИЗ
	|	РегистрНакопления.ТоварыКПередачеСоСкладов.Остатки(
	|			,
	|			Номенклатура В
	|					(ВЫБРАТЬ
	|						ВремВсяНоменклатура.Номенклатура
	|					ИЗ
	|						ВремВсяНоменклатура)
	|				И Склад В
	|					(ВЫБРАТЬ
	|						ВремСклады.Склад
	|					ИЗ
	|						ВремСклады)) КАК Остатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Остатки.Номенклатура,
	|	Остатки.ХарактеристикаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВремНоменклатураПлюсХарактеристики.Номенклатура КАК Номенклатура,
	|	ВремНоменклатураПлюсХарактеристики.Характеристика КАК Характеристика,
	|	ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(ТоварыВРозницеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(ТоварыВНТТОстатки.КоличествоОстаток, 0) - ЕСТЬNULL(ТоварыВРезервеНаСкладахОстатки.КоличествоОстаток, 0) - ЕСТЬNULL(ТоварыКПередачеСоСкладовОстатки.КоличествоОстаток, 0) КАК Остаток
	|ПОМЕСТИТЬ ВремНоменклатураСХарактеристиками
	|ИЗ
	|	ВремНоменклатураПлюсХарактеристики КАК ВремНоменклатураПлюсХарактеристики
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВремТоварыНаСкладах КАК ТоварыНаСкладахОстатки
	|		ПО ВремНоменклатураПлюсХарактеристики.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура
	|			И ВремНоменклатураПлюсХарактеристики.Характеристика = ТоварыНаСкладахОстатки.ХарактеристикаНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВремТоварыВРознице КАК ТоварыВРозницеОстатки
	|		ПО ВремНоменклатураПлюсХарактеристики.Номенклатура = ТоварыВРозницеОстатки.Номенклатура
	|			И ВремНоменклатураПлюсХарактеристики.Характеристика = ТоварыВРозницеОстатки.ХарактеристикаНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВремТоварыВНТТ КАК ТоварыВНТТОстатки
	|		ПО ВремНоменклатураПлюсХарактеристики.Номенклатура = ТоварыВНТТОстатки.Номенклатура
	|			И ВремНоменклатураПлюсХарактеристики.Характеристика = ТоварыВНТТОстатки.ХарактеристикаНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВремТоварыВРезервеНаСкладах КАК ТоварыВРезервеНаСкладахОстатки
	|		ПО ВремНоменклатураПлюсХарактеристики.Номенклатура = ТоварыВРезервеНаСкладахОстатки.Номенклатура
	|			И ВремНоменклатураПлюсХарактеристики.Характеристика = ТоварыВРезервеНаСкладахОстатки.ХарактеристикаНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВремТоварыКПередачеСоСкладов КАК ТоварыКПередачеСоСкладовОстатки
	|		ПО ВремНоменклатураПлюсХарактеристики.Номенклатура = ТоварыКПередачеСоСкладовОстатки.Номенклатура
	|			И ВремНоменклатураПлюсХарактеристики.Характеристика = ТоварыКПередачеСоСкладовОстатки.ХарактеристикаНоменклатуры
	|{ГДЕ
	|	(ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(ТоварыВРозницеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(ТоварыВНТТОстатки.КоличествоОстаток, 0) - ЕСТЬNULL(ТоварыВРезервеНаСкладахОстатки.КоличествоОстаток, 0) - ЕСТЬNULL(ТоварыКПередачеСоСкладовОстатки.КоличествоОстаток, 0)) КАК Остаток}
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремНоменклатураПлюсХарактеристики
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремТоварыНаСкладах
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремТоварыВРознице
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремТоварыВНТТ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремТоварыВРезервеНаСкладах
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремТоварыКПередачеСоСкладов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВремНоменклатураСХарактеристиками.Номенклатура,
	|	ВремНоменклатураСХарактеристиками.Номенклатура.БазоваяЕдиницаИзмерения КАК БазоваяЕдиницаИзмерения,
	|	""Номенклатура"" КАК ТипОбъекта
	|ПОМЕСТИТЬ ВремНоменклатураРазличные
	|ИЗ
	|	ВремНоменклатураСХарактеристиками КАК ВремНоменклатураСХарактеристиками
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВремНоменклатураСХарактеристиками.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремВсяНоменклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремНоменклатураСХарактеристиками
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СвойстваОбъектов.Ссылка КАК СвойствоНоменклатуры,
	|	""Свойство"" КАК ТипОбъекта
	|ПОМЕСТИТЬ ВремВсеСвойства
	|ИЗ
	|	ПланВидовХарактеристик.СвойстваОбъектов КАК СвойстваОбъектов
	|ГДЕ
	|	(СвойстваОбъектов.НазначениеСвойства = ЗНАЧЕНИЕ(ПланВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Номенклатура)
	|			ИЛИ СвойстваОбъектов.НазначениеСвойства = ЗНАЧЕНИЕ(ПланВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ХарактеристикиНоменклатуры))
	|	И &НадоВыгружатьСвойства = ИСТИНА
	|	И СвойстваОбъектов.Б_Идентификатор <> ""СвойствоЗаказа""
	|{ГДЕ
	|	СвойстваОбъектов.Ссылка.* КАК СвойствоНоменклатуры}
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СвойствоНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТипыЦенНоменклатуры.Ссылка КАК ТипЦены,
	|	""ТипЦены"" КАК ТипОбъекта
	|ПОМЕСТИТЬ ВремТипыЦен
	|ИЗ
	|	Справочник.ТипыЦенНоменклатуры КАК ТипыЦенНоменклатуры
	|{ГДЕ
	|	ТипыЦенНоменклатуры.Ссылка.* КАК ТипЦен}
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТипыЦенНоменклатуры.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	""ЕдиницаИзмерения"" КАК ТипОбъекта,
	|	ВремНоменклатураРазличные.БазоваяЕдиницаИзмерения
	|ПОМЕСТИТЬ ВремЕдиницыИзмерения
	|ИЗ
	|	ВремНоменклатураРазличные КАК ВремНоменклатураРазличные
	|ГДЕ
	|	ВремНоменклатураРазличные.БазоваяЕдиницаИзмерения <> ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВремНоменклатураРазличные.Номенклатура КАК Объект,
	|	ВремНоменклатураРазличные.ТипОбъекта
	|ИЗ
	|	ВремНоменклатураРазличные КАК ВремНоменклатураРазличные
	|{УПОРЯДОЧИТЬ ПО
	|	Объект.*}
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремСклады
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремНоменклатураРазличные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремВсеСвойства
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремТипыЦен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремЕдиницыИзмерения";
	
КонецПроцедуры

Процедура НастроитьПостроительЗаказов(ПостроительОбъект, УзелОбмена) Экспорт
	
	ПостроительОбъект.Параметры.Вставить("Узел", УзелОбмена.Ссылка);
	ПостроительОбъект.Параметры.Вставить("ПолнаяВыгрузка", (НЕ УзелОбмена.ВыгружатьТолькоИзменения ИЛИ УзелОбмена.ВыполнятьПолнуюВыгрузкуПринудительно));
	ПостроительОбъект.Параметры.Вставить("ТочкаАктуальностиЗаказа", УзелОбмена.ТочкаАктуальностиВыгрузкиДокументов);
	ПостроительОбъект.Параметры.Вставить("ВыгружатьВсеЗаказы", УзелОбмена.ВыгружатьВсеЗаказы);
	
	ПостроительОбъект.Текст = 	"ВЫБРАТЬ
	|	ЗаказПокупателя.Ссылка КАК Объект,
	|	""Заказ"" КАК ТипОбъекта
	|ИЗ
	|	Документ.ЗаказПокупателя КАК ЗаказПокупателя
	|ГДЕ
	|	ЗаказПокупателя.Дата >= &ТочкаАктуальностиЗаказа
	|	И ВЫБОР
	|			КОГДА &ПолнаяВыгрузка
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЗаказПокупателя.Ссылка В
	|					(ВЫБРАТЬ
	|						ЗаказПокупателяИзменения.Ссылка
	|					ИЗ
	|						Документ.ЗаказПокупателя.Изменения КАК ЗаказПокупателяИзменения
	|					ГДЕ
	|						ЗаказПокупателяИзменения.Узел = &Узел)
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА &ВыгружатьВсеЗаказы
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ВЫБОР
	|					КОГДА ЗаказПокупателя.Б_Идентификатор <> """"
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ
	|		КОНЕЦ
	|{ГДЕ
	|	ЗаказПокупателя.Организация.* КАК Организации,
	|	ЗаказПокупателя.Подразделение.*}";
	
	
КонецПроцедуры

Процедура НастроитьПостроительКонтрагентов(ПостроительОбъект, УзелОбмена) Экспорт
	
	ПостроительОбъект.Параметры.Вставить("Узел", УзелОбмена.Ссылка);
	ПостроительОбъект.Параметры.Вставить("ПолнаяВыгрузка", (НЕ УзелОбмена.ВыгружатьТолькоИзменения ИЛИ УзелОбмена.ВыполнятьПолнуюВыгрузкуПринудительно));
	
	ПостроительОбъект.Параметры.Вставить("НадоВыгружатьКонтрагентов", УзелОбмена.ВыгрузкаКонтрагентов);
	
	ПостроительОбъект.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	Контрагенты.Ссылка КАК Объект
	|ПОМЕСТИТЬ ВремКонтрагенты
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КатегорииОбъектов КАК КатегорииОбъектов
	|		ПО Контрагенты.Ссылка = КатегорииОбъектов.Объект
	|ГДЕ
	|	Контрагенты.Покупатель = ИСТИНА
	|	И ВЫБОР
	|			КОГДА &ПолнаяВыгрузка
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ Контрагенты.Ссылка В
	|					(ВЫБРАТЬ
	|						КонтрагентыИзменения.Ссылка
	|					ИЗ
	|						Справочник.Контрагенты.Изменения КАК КонтрагентыИзменения
	|					ГДЕ
	|						КонтрагентыИзменения.Узел = &Узел)
	|		КОНЕЦ
	|	И &НадоВыгружатьКонтрагентов = ИСТИНА
	|{ГДЕ
	|	Контрагенты.Ссылка.* КАК Контрагенты,
	|	(ЕСТЬNULL(КатегорииОбъектов.Категория, ЗНАЧЕНИЕ(Справочник.КатегорииОбъектов.ПустаяСсылка))).* КАК КатегорияКонтрагентов}
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВремКонтрагенты.Объект,
	|	""Контрагент"" КАК ТипОбъекта
	|ИЗ
	|	ВремКонтрагенты КАК ВремКонтрагенты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремКонтрагенты";
	
КонецПроцедуры

Процедура НастроитьПостроительКартЛояльности(ПостроительОбъект, УзелОбмена) Экспорт
	
	ПостроительОбъект.Параметры.Вставить("Узел", УзелОбмена.Ссылка);
	ПостроительОбъект.Параметры.Вставить("ПолнаяВыгрузка", (НЕ УзелОбмена.ВыгружатьТолькоИзменения ИЛИ УзелОбмена.ВыполнятьПолнуюВыгрузкуПринудительно));
	
	ПостроительОбъект.Параметры.Вставить("НадоВыгружатьКартыЛояльности", УзелОбмена.СинхронизацияКартЛояльности);
	
	ПостроительОбъект.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ИнформационныеКарты.Ссылка КАК ДисконтнаяКарта,
	|	""ДисконтнаяКарта"" КАК ТипОбъекта
	|ПОМЕСТИТЬ ВремДисконтныеКарты
	|ИЗ
	|	Справочник.ИнформационныеКарты КАК ИнформационныеКарты
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &ПолнаяВыгрузка
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ИнформационныеКарты.Ссылка В
	|					(ВЫБРАТЬ
	|						ИнформационныеКарты.Ссылка
	|					ИЗ
	|						Справочник.ИнформационныеКарты.Изменения КАК ИнформационныеКарты
	|					ГДЕ
	|						ИнформационныеКарты.Узел = &Узел)
	|		КОНЕЦ
	|	И &НадоВыгружатьКартыЛояльности = ИСТИНА
	|	И ИнформационныеКарты.ВладелецКарты ССЫЛКА Справочник.Контрагенты
	|{ГДЕ
	|	ИнформационныеКарты.Ссылка.* КАК ДисконтнаяКарта,
	|	ИнформационныеКарты.ВладелецКарты.*,
	|	ИнформационныеКарты.ВидДисконтнойКарты.* КАК ВидДисконтнойКарты}
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДисконтнаяКарта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВремДисконтныеКарты.ДисконтнаяКарта.ВидДисконтнойКарты КАК ВидДисконтнойКарты,
	|	""ВидДисконтнойКарты"" КАК ТипОбъекта
	|ПОМЕСТИТЬ ВремВидыДисконтныхКарт
	|ИЗ
	|	ВремДисконтныеКарты КАК ВремДисконтныеКарты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидДисконтнойКарты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВремДисконтныеКарты.ДисконтнаяКарта КАК Объект,
	|	ВремДисконтныеКарты.ТипОбъекта
	|ИЗ
	|	ВремДисконтныеКарты КАК ВремДисконтныеКарты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВремВидыДисконтныхКарт.ВидДисконтнойКарты,
	|	ВремВидыДисконтныхКарт.ТипОбъекта
	|ИЗ
	|	ВремВидыДисконтныхКарт КАК ВремВидыДисконтныхКарт
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремДисконтныеКарты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремВидыДисконтныхКарт";
	
КонецПроцедуры

Процедура НастроитьПостроительСкидок(ПостроительОбъект, УзелОбмена) Экспорт
	
	ПостроительОбъект.Параметры.Вставить("Узел"								, УзелОбмена.Ссылка);
	ПостроительОбъект.Параметры.Вставить("ПолнаяВыгрузка"					, (НЕ УзелОбмена.ВыгружатьТолькоИзменения ИЛИ УзелОбмена.ВыполнятьПолнуюВыгрузкуПринудительно));
	ПостроительОбъект.Параметры.Вставить("НадоВыгружатьСкидки"				, УзелОбмена.СинхронизацияСкидок);
	ПостроительОбъект.Параметры.Вставить("НадоВыгружатьВидыКартЛояльности"	, УзелОбмена.СинхронизацияВидовКартЛояльности);
	
	ПостроительОбъект.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	Номенклатура.Ссылка КАК Номенклатура
	|ПОМЕСТИТЬ ВремНоменклатура
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|{ГДЕ
	|	Номенклатура.Ссылка.* КАК Номенклатура}
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремНоменклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	Контрагенты.Ссылка
	|ПОМЕСТИТЬ ВремКонтрагенты
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|{ГДЕ
	|	Контрагенты.Ссылка.* КАК Контрагенты}
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремКонтрагенты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	СкидкиНаценкиНоменклатуры.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ВремВсеСкидки
	|ИЗ
	|	РегистрСведений.СкидкиНаценкиНоменклатуры КАК СкидкиНаценкиНоменклатуры
	|ГДЕ
	|	СкидкиНаценкиНоменклатуры.Регистратор ССЫЛКА Документ.УстановкаСкидокНоменклатуры
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СкидкиНаценкиПоЦеновымГруппам.Регистратор
	|ИЗ
	|	РегистрСведений.СкидкиНаценкиПоЦеновымГруппам КАК СкидкиНаценкиПоЦеновымГруппам
	|ГДЕ
	|	СкидкиНаценкиПоЦеновымГруппам.Регистратор ССЫЛКА Документ.УстановкаСкидокНоменклатуры
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВремВсеСкидки.Регистратор КАК Скидка,
	|	""Скидка"" КАК ТипОбъекта
	|ПОМЕСТИТЬ ВремСкидки
	|ИЗ
	|	ВремВсеСкидки КАК ВремВсеСкидки
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &ПолнаяВыгрузка
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ВремВсеСкидки.Регистратор В
	|					(ВЫБРАТЬ
	|						УстановкаСкидокНоменклатурыИзменения.Ссылка
	|					ИЗ
	|						Документ.УстановкаСкидокНоменклатуры.Изменения КАК УстановкаСкидокНоменклатурыИзменения
	|					ГДЕ
	|						УстановкаСкидокНоменклатурыИзменения.Узел = &Узел)
	|		КОНЕЦ
	|	И &НадоВыгружатьСкидки = ИСТИНА
	|	И ВремВсеСкидки.Регистратор.ВидОперации <> ЗНАЧЕНИЕ(Перечисление.ВидыОперацийУстановкаСкидокНоменклатуры.НатуральныеСкидки)
	|{ГДЕ
	|	ВремВсеСкидки.Регистратор.* КАК Скидка}
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Скидка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремВсеСкидки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВидыДисконтныхКарт.Ссылка КАК ВидДисконтнойКарты,
	|	""ВидДисконтнойКарты"" КАК ТипОбъекта
	|ПОМЕСТИТЬ ВремВидыДисконтныхКарт
	|ИЗ
	|	Справочник.ВидыДисконтныхКарт КАК ВидыДисконтныхКарт
	|ГДЕ
	|	&НадоВыгружатьВидыКартЛояльности = ИСТИНА
	|{ГДЕ
	|	ВидыДисконтныхКарт.Ссылка.* КАК ВидДисконтнойКарты}
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидДисконтнойКарты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВремСкидки.Скидка КАК Объект,
	|	ВремСкидки.ТипОбъекта
	|ИЗ
	|	ВремСкидки КАК ВремСкидки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВремВидыДисконтныхКарт.ВидДисконтнойКарты,
	|	ВремВидыДисконтныхКарт.ТипОбъекта
	|ИЗ
	|	ВремВидыДисконтныхКарт КАК ВремВидыДисконтныхКарт
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремСкидки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремВидыДисконтныхКарт";
	
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////////
Процедура ЗаполнитьОтборПостроителяОбщейИнформации(ПостроительОбъект, УзелОбмена)Экспорт
	
	ОтборКоличество = ПостроительОбъект.Отбор.Количество();
	Для Сч = 1 По ОтборКоличество Цикл
		ПостроительОбъект.Отбор.Удалить(ОтборКоличество - Сч);
	КонецЦикла;
	
	ПостроительОбъект.Отбор.Добавить("Номенклатура", , "Номенклатура");
	
	ПостроительОбъект.Отбор.Добавить("ТипЦен", , "Тип цен");
	ПостроительОбъект.ДоступныеПоля.ТипЦен.Представление = "Тип цен";
	
	ПостроительОбъект.Отбор.Добавить("Склад", , "Остатки по складам");
	ПостроительОбъект.ДоступныеПоля.Склад.Представление = "Остатки по складам";
	
	ПостроительОбъект.Отбор.Добавить("Остаток", , "Остаток");
	ПостроительОбъект.ДоступныеПоля.Остаток.Представление = "Остаток";
	
	ПостроительОбъект.Отбор.Добавить("КатегорияНоменклатуры", , "Категория номенклатуры");
	ПостроительОбъект.ДоступныеПоля.КатегорияНоменклатуры.Представление = "Категория номенклатуры";

	ПостроительОбъект.Отбор.Добавить("ОсновноеИзображение", , "Основное изображение");
	ПостроительОбъект.ДоступныеПоля.КатегорияНоменклатуры.Представление = "Основное изображение";
	
КонецПроцедуры

Процедура ЗаполнитьОтборПостроителяСвойств(ПостроительОбъект, УзелОбмена)Экспорт
	
	ОтборКоличество = ПостроительОбъект.Отбор.Количество();
	Для Сч = 1 По ОтборКоличество Цикл
		ПостроительОбъект.Отбор.Удалить(ОтборКоличество - Сч);
	КонецЦикла;
	
	ПостроительОбъект.Отбор.Добавить("СвойствоНоменклатуры", , "Свойство номенклатуры");
	ПостроительОбъект.ДоступныеПоля.СвойствоНоменклатуры.Представление = "Свойство номенклатуры";
	
КонецПроцедуры

Процедура ЗаполнитьОтборПостроителяТоваров(ПостроительОбъект, УзелОбмена)Экспорт
	
	ОтборКоличество = ПостроительОбъект.Отбор.Количество();
	Для Сч = 1 По ОтборКоличество Цикл
		ПостроительОбъект.Отбор.Удалить(ОтборКоличество - Сч);
	КонецЦикла;
	
	ПостроительОбъект.Отбор.Добавить("Номенклатура", , "Номенклатура");
	
	ПостроительОбъект.Отбор.Добавить("ТипЦен", , "Тип цен");
	ПостроительОбъект.ДоступныеПоля.ТипЦен.Представление = "Тип цен";
	
	ПостроительОбъект.Отбор.Добавить("Склад", , "Остатки по складам");
	ПостроительОбъект.ДоступныеПоля.Склад.Представление = "Остатки по складам";
	
	ПостроительОбъект.Отбор.Добавить("Остаток", , "Остаток");
	ПостроительОбъект.ДоступныеПоля.Остаток.Представление = "Остаток";
	
	ПостроительОбъект.Отбор.Добавить("СвойствоНоменклатуры", , "Свойство номенклатуры");
	ПостроительОбъект.ДоступныеПоля.СвойствоНоменклатуры.Представление = "Свойство номенклатуры";
	
	ПостроительОбъект.Отбор.Добавить("КатегорияНоменклатуры", , "Категория номенклатуры");
	ПостроительОбъект.ДоступныеПоля.КатегорияНоменклатуры.Представление = "Категория номенклатуры";

	ПостроительОбъект.Отбор.Добавить("ОсновноеИзображение", , "Основное изображение");
	ПостроительОбъект.ДоступныеПоля.КатегорияНоменклатуры.Представление = "Основное изображение";
	
КонецПроцедуры

Процедура ЗаполнитьОтборПостроителяЗаказов(ПостроительОбъект, УзелОбмена)Экспорт
	
	ОтборКоличество = ПостроительОбъект.Отбор.Количество();
	Для Сч = 1 По ОтборКоличество Цикл
		ПостроительОбъект.Отбор.Удалить(ОтборКоличество - Сч);
	КонецЦикла;
	
	ПостроительОбъект.Отбор.Добавить("Организации", , "Организации");
	ПостроительОбъект.ДоступныеПоля.Организации.Представление = "Организации";
	
	ПостроительОбъект.Отбор.Добавить("Подразделение", , "Подразделение");
	ПостроительОбъект.ДоступныеПоля.Организации.Представление = "Подразделение";
      
КонецПроцедуры

Процедура ЗаполнитьОтборПостроителяКонтрагентов(ПостроительОбъект, УзелОбмена)Экспорт
	
	ОтборКоличество = ПостроительОбъект.Отбор.Количество();
	Для Сч = 1 По ОтборКоличество Цикл
		ПостроительОбъект.Отбор.Удалить(ОтборКоличество - Сч);
	КонецЦикла;
	
	ПостроительОбъект.Отбор.Добавить("Контрагенты", , "Контрагенты");
	
	ПостроительОбъект.Отбор.Добавить("КатегорияКонтрагентов", , "Категория контрагентов");
	ПостроительОбъект.ДоступныеПоля.КатегорияКонтрагентов.Представление = "Категория контрагентов";

КонецПроцедуры

Процедура ЗаполнитьОтборПостроителяКартЛояльности(ПостроительОбъект, УзелОбмена)Экспорт
	
	ОтборКоличество = ПостроительОбъект.Отбор.Количество();
	Для Сч = 1 По ОтборКоличество Цикл
		ПостроительОбъект.Отбор.Удалить(ОтборКоличество - Сч);
	КонецЦикла;
	
	ПостроительОбъект.Отбор.Добавить("ДисконтнаяКарта", , "Дисконтная карта");
	
	ПостроительОбъект.Отбор.Добавить("ВладелецКарты", , "Владелец карты");
	ПостроительОбъект.ДоступныеПоля.ВладелецКарты.Представление = "Категория контрагентов";

	ПостроительОбъект.Отбор.Добавить("ВидДисконтнойКарты", , "Вид дисконтной карты");
	ПостроительОбъект.ДоступныеПоля.ВидДисконтнойКарты.Представление = "Вид дисконтной карты";
	
КонецПроцедуры

Процедура ЗаполнитьОтборПостроителяСкидок(ПостроительОбъект, УзелОбмена)Экспорт
	
	ОтборКоличество = ПостроительОбъект.Отбор.Количество();
	Для Сч = 1 По ОтборКоличество Цикл
		ПостроительОбъект.Отбор.Удалить(ОтборКоличество - Сч);
	КонецЦикла;
	
	ПостроительОбъект.Отбор.Добавить("Номенклатура"	, , "Номенклатура");
	ПостроительОбъект.Отбор.Добавить("Контрагенты"	, , "Контрагенты");
	ПостроительОбъект.Отбор.Добавить("Скидка"		, , "Скидка");
	
	ПостроительОбъект.Отбор.Добавить("ВидДисконтнойКарты", , "Вид дисконтной карты");
	ПостроительОбъект.ДоступныеПоля.ВидДисконтнойКарты.Представление = "Вид дисконтной карты";
	
КонецПроцедуры

Функция ПолучитьПустуюСтруктуруНастроекДляОтборов() Экспорт
	
	лВременныеДанные = Новый Структура;
	лВременныеДанные.Вставить("Ссылка"								, ПланыОбмена.Б_ОбменССайтом.ПустаяСсылка());
	лВременныеДанные.Вставить("ВыгружатьТолькоИзменения" 			, Ложь);
	лВременныеДанные.Вставить("ВыполнятьПолнуюВыгрузкуПринудительно", Ложь);
	лВременныеДанные.Вставить("ВыгружатьВсеЗаказы"					, Ложь);
	лВременныеДанные.Вставить("ТочкаАктуальностиВыгрузкиДокументов"	, ТекущаяДата());
	лВременныеДанные.Вставить("СинхронизацияКартЛояльности"			, Ложь);
	лВременныеДанные.Вставить("СинхронизацияСкидок"					, Ложь);
	лВременныеДанные.Вставить("СинхронизацияВидовКартЛояльности"	, Ложь);
	лВременныеДанные.Вставить("ВыгрузкаКонтрагентов"				, Ложь);
	
	лВременныеДанные.Вставить("КлассифицироватьПоЦеновымГруппам"	, Ложь);
	лВременныеДанные.Вставить("ОбменТоварами"						, Ложь);
	лВременныеДанные.Вставить("ВыгружатьСвойства"					, Ложь);
	лВременныеДанные.Вставить("СинхронизацияКартинок"				, Ложь);
	лВременныеДанные.Вставить("ВыгружатьНаборы"						, Ложь);
	
	Возврат лВременныеДанные;
	
КонецФункции

//////////////////////////////////////////////////////////////////////////////////
Функция ПолучитьСписокСвойств() Экспорт
	
	СпкНазначенийСвойств = Новый СписокЗначений;
	СпкНазначенийСвойств.Добавить(ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Номенклатура);
	СпкНазначенийСвойств.Добавить(ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ХарактеристикиНоменклатуры);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	СвойстваОбъектов.Ссылка
	|ИЗ
	|	ПланВидовХарактеристик.СвойстваОбъектов КАК СвойстваОбъектов
	|ГДЕ
	|	СвойстваОбъектов.НазначениеСвойства В(&СписокНазначенийСвойств)
	|	И СвойстваОбъектов.ПометкаУдаления = ЛОЖЬ
	|	И СвойстваОбъектов.Б_Идентификатор <> ""СвойствоЗаказа""";
	Запрос.УстановитьПараметр("СписокНазначенийСвойств",СпкНазначенийСвойств);
	Результат = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");			   
	
	Возврат Результат;
	
КонецФункции

Функция ОбновитьСвойстваВТаблицеЗначений(тзнТекущихСвойств) Экспорт
	
	тзнОбновленныхСвойств = тзнТекущихСвойств.СкопироватьКолонки();
	
	МассивСвойств 	= ПолучитьСписокСвойств();
	
	Для каждого Свойство из МассивСвойств Цикл
		
		НайденнаяСтрока = тзнТекущихСвойств.Найти(свойство, "Свойство");
		
		Если НайденнаяСтрока = Неопределено тогда
			
			НовСтр =  тзнОбновленныхСвойств.Добавить();
			НовСтр.Свойство 		= свойство;
			НовСтр.ВлияетНаЦену 	= Ложь;
			НовСтр.ВыгружатьВХИ 	= Ложь;
			
			
		Иначе
			
			НовСтр =  тзнОбновленныхСвойств.Добавить();
			НовСтр.Свойство = свойство;
			НовСтр.ВлияетНаЦену = НайденнаяСтрока.ВлияетНаЦену;
			НовСтр.ВыгружатьВХИ = НайденнаяСтрока.ВыгружатьВХИ;
			
		КонецЕсли;
		
	КонецЦикла;
	
	тзнОбновленныхСвойств.Сортировать("Свойство");
	
	Возврат тзнОбновленныхСвойств;
	
КонецФункции

Функция ЗаполнениеПолейСоответствийКонтрагентовПоУмолчанию(ТипКонтрагента) Экспорт
	
	ТзнКонтактнойИнформации = Новый ТаблицаЗначений;
	ТзнКонтактнойИнформации.Колонки.Добавить("НаименованиеПоля");
	ТзнКонтактнойИнформации.Колонки.Добавить("ВидКонтактнойИнформации");

	
	Если ТипКонтрагента = "ЮрЛицо" тогда
		
		спкПолей = Новый Массив;
		спкПолей.Добавить("ЮридическийАдрес");
		спкПолей.Добавить("АдресРегистрации");
		спкПолей.Добавить("Адрес");
			
		Для Каждого ТекЭлемент из спкПолей Цикл
			
			НайденнаяСтрока = ТзнКонтактнойИнформации.Найти(ТекЭлемент);
			
			Если НайденнаяСтрока = Неопределено Тогда
				
				НоваяСтрока = ТзнКонтактнойИнформации.Добавить();	
				НоваяСтрока.НаименованиеПоля = ТекЭлемент;
				
				Если ТекЭлемент = "ЮридическийАдрес" тогда
					НоваяСтрока.ВидКонтактнойИнформации = Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента;
				ИначеЕсли ТекЭлемент = "АдресРегистрации" тогда
					НоваяСтрока.ВидКонтактнойИнформации = Справочники.ВидыКонтактнойИнформации.АдресДоставкиКонтрагента;
				ИначеЕсли ТекЭлемент = "Адрес" тогда
					НоваяСтрока.ВидКонтактнойИнформации = Справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента;
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		
	Иначе
		
		спкПолей = Новый Массив;
		спкПолей.Добавить("АдресРегистрации");
		спкПолей.Добавить("Адрес");
		
		Для Каждого ТекЭлемент из спкПолей Цикл
			
			НайденнаяСтрока = ТзнКонтактнойИнформации.Найти(ТекЭлемент);
			
			Если НайденнаяСтрока = Неопределено Тогда
				
				НоваяСтрока = ТзнКонтактнойИнформации.Добавить();	
				НоваяСтрока.НаименованиеПоля = ТекЭлемент;
				
				Если ТекЭлемент = "АдресРегистрации" тогда
					НоваяСтрока.ВидКонтактнойИнформации = Справочники.ВидыКонтактнойИнформации.АдресДоставкиКонтрагента;
				ИначеЕсли ТекЭлемент = "Адрес" тогда
					НоваяСтрока.ВидКонтактнойИнформации = Справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента;
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат ТзнКонтактнойИнформации;
	
КонецФункции

//////////////////////////////////////////////////////////////////////////////////
Функция ЗаполнениеПолейДополнительныхСоответствийНоменклатурыПоУмолчанию() Экспорт
	
	Массив = Новый Массив;
	Массив.Добавить(Тип("Строка"));
	ОписаниеТиповС = Новый ОписаниеТипов(Массив);   

	
	СоответствиеДополнительныхРеквизитовНоменклатуры = Новый ТаблицаЗначений;
	СоответствиеДополнительныхРеквизитовНоменклатуры.Колонки.Добавить("НаименованиеПоля"	, ОписаниеТиповС);
	СоответствиеДополнительныхРеквизитовНоменклатуры.Колонки.Добавить("НаименованиеПоля1С", ОписаниеТиповС);
	
	
	спкПолей = Новый Массив;
	спкПолей.Добавить("Полное наименование");
	спкПолей.Добавить("Код");
	
	Для Каждого ТекЭлемент из спкПолей Цикл
		
		НайденнаяСтрока = СоответствиеДополнительныхРеквизитовНоменклатуры.Найти(ТекЭлемент, "НаименованиеПоля");
		
		Если НайденнаяСтрока = Неопределено Тогда
			
			НоваяСтрока = СоответствиеДополнительныхРеквизитовНоменклатуры.Добавить();	
			
			НоваяСтрока.НаименованиеПоля 	= ТекЭлемент;
			
			Если ТекЭлемент = "Полное наименование" тогда
				НоваяСтрока.НаименованиеПоля1С = "Полное наименование";
			ИначеЕсли ТекЭлемент = "Код" тогда
				НоваяСтрока.НаименованиеПоля1С = "Код";
			КонецЕсли;
		КонецЕсли;
			
	КонецЦикла;
	
	Возврат СоответствиеДополнительныхРеквизитовНоменклатуры;
	
КонецФункции

Функция ЗаполнениеПолейОсновныхСоответствийНоменклатурыПоУмолчанию() Экспорт
	
	Массив = Новый Массив;
	Массив.Добавить(Тип("Строка"));
	ОписаниеТиповС = Новый ОписаниеТипов(Массив); 
	
	СоответствиеОсновныхРеквизитовНоменклатуры = Новый ТаблицаЗначений;
	СоответствиеОсновныхРеквизитовНоменклатуры.Колонки.Добавить("НаименованиеПоля"	, ОписаниеТиповС);
	СоответствиеОсновныхРеквизитовНоменклатуры.Колонки.Добавить("НаименованиеПоля1С", ОписаниеТиповС);
	
	спкПолей = Новый Массив;
	спкПолей.Добавить("Штрихкод");
	спкПолей.Добавить("Артикул");
	спкПолей.Добавить("Наименование");
	спкПолей.Добавить("Описание");
	спкПолей.Добавить("Страна");
	спкПолей.Добавить("ВесНетто");
	спкПолей.Добавить("Вес");
			
	Для Каждого ТекЭлемент из спкПолей Цикл
		
		НайденнаяСтрока = СоответствиеОсновныхРеквизитовНоменклатуры.Найти(ТекЭлемент, "НаименованиеПоля");
		
		Если НайденнаяСтрока = Неопределено Тогда
			
			НоваяСтрока = СоответствиеОсновныхРеквизитовНоменклатуры.Добавить();	
			
			НоваяСтрока.НаименованиеПоля 	= ТекЭлемент;
			
			Если ТекЭлемент = "Артикул" тогда
				НоваяСтрока.НаименованиеПоля1С = "Артикул";
			ИначеЕсли ТекЭлемент = "Наименование" тогда
				НоваяСтрока.НаименованиеПоля1С = "Наименование";
			ИначеЕсли ТекЭлемент = "Описание" тогда
				НоваяСтрока.НаименованиеПоля1С = "Описание";
			ИначеЕсли ТекЭлемент = "Страна" тогда
				НоваяСтрока.НаименованиеПоля1С = "Страна происхождения";
			ИначеЕсли ТекЭлемент = "Вес" тогда
				НоваяСтрока.НаименованиеПоля1С = "Вес";
			ИначеЕсли ТекЭлемент = "Штрихкод" тогда
				НоваяСтрока.НаименованиеПоля1С = "Штрихкод";
			КонецЕсли;
		КонецЕсли;
			
	КонецЦикла;
	
	Возврат СоответствиеОсновныхРеквизитовНоменклатуры;
	
КонецФункции

 /////////////////////////////////////////////////////////////////////////////////

  
Функция ЗаполнениеСоответствийЗагружаемыхДокументовПоУмолчанию() Экспорт
	
	ТзнДок		= Новый ТаблицаЗначений;
	ТзнДок.Колонки.Добавить("Документ");
	ТзнДок.Колонки.Добавить("СинонимДокумента");
	ТзнДок.Колонки.Добавить("ВидДокумента");
	ТзнДок.Колонки.Добавить("НумерацияДокументов");
	ТзнДок.Колонки.Добавить("ДатаДокументов");
	ТзнДок.Колонки.Добавить("ДействияСОтмененнымиДокументами");
	ТзнДок.Колонки.Добавить("РежимЗаписиДокументов");
	
	ТзнШапки 	= Новый ТаблицаЗначений;
	ТзнШапки.Колонки.Добавить("Документ");
	ТзнШапки.Колонки.Добавить("ТипДанных");
	ТзнШапки.Колонки.Добавить("Значение");
	ТзнШапки.Колонки.Добавить("СинонимРеквизита1С");
	ТзнШапки.Колонки.Добавить("НаименованиеРеквизита1С");
	
	ТзнТЧ 		= Новый ТаблицаЗначений;
	ТзнТЧ.Колонки.Добавить("Документ");
	ТзнТЧ.Колонки.Добавить("ТабличнаяЧасть");
	ТзнТЧ.Колонки.Добавить("ПолеXML");
	ТзнТЧ.Колонки.Добавить("ТипДанных");
	ТзнТЧ.Колонки.Добавить("Значение");
	ТзнТЧ.Колонки.Добавить("СинонимРеквизита1С");
	ТзнТЧ.Колонки.Добавить("НаименованиеРеквизита1С");
	
	мДокументы = Новый Массив;
	мДокументы.Добавить("ЗаказПокупателя");
	мДокументы.Добавить("ПриходныйКассовыйОрдер");
	мДокументы.Добавить("ОплатаОтПокупателяПлатежнойКартой");
	мДокументы.Добавить("РеализацияТоваровУслуг");
	
	Для каждого Документ из мДокументы Цикл
		НайденныеСтроки = ТзнДок.НайтиСтроки(Новый Структура("Документ",Документ));
		
		Если НайденныеСтроки.Количество() = 0 тогда
			
			НоваяСтрока = ТзнДок.Добавить();
			НоваяСтрока.Документ 			= Документ;
			НоваяСтрока.СинонимДокумента 	= Метаданные.Документы[Документ].Синоним;
			
			Если Документ = "ЗаказПокупателя" тогда
				НоваяСтрока.ВидДокумента 		= "Заказ";
			ИначеЕсли Документ = "РеализацияТоваровУслуг" тогда
				НоваяСтрока.ВидДокумента 		= "Отгрузка";
			Иначе
				НоваяСтрока.ВидДокумента 		= "Оплата";
			КонецЕсли;
			
			НоваяСтрока.НумерацияДокументов 			= "Автоматически";
			НоваяСтрока.ДатаДокументов 					= "С сайта";
			НоваяСтрока.ДействияСОтмененнымиДокументами = "Помечать на удаление";
			НоваяСтрока.РежимЗаписиДокументов 			= "Только записывать документы";
			
		КонецЕсли;
		
		Если Документ = "ЗаказПокупателя" тогда 
			
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Дата"						, "Дата"					, "Из поля XML документа"	, "Дата с сайта с учетом настройки обмена");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Б_Идентификатор"			, "Идентификатор битрикс"	, "Из поля XML документа"	, "Номер с сайта");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Б_ДатаДокумента"			, "Дата документа Битрикс"	, "Из поля XML документа"	, "Дата с сайта");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Б_НомерВерсии"			, "Номер версии Битрикс"	, "Из поля XML документа"	, "Номер версии с сайта");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "ПометкаУдаления"			, "Пометка удаления"		, "Из поля XML документа"	, "Пометка удаления");
			
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "НомерВходящегоДокументаЭлектронногоОбмена", "Номер входящего документа электронного обмена", "Из поля XML документа", "Номер с сайта");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "ДатаВходящегоДокументаЭлектронногоОбмена"	, "Дата входящего документа электронного обмена", "Из поля XML документа", "Дата с сайта");
			
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Комментарий"				, "Комментарий"				, "Из поля XML документа"	, "Комментарий");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Организация"				, "Организация"				, "Фиксированное значение"	, Справочники.Организации.ПустаяСсылка());
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Контрагент"				, "Контрагент"				, "Из поля XML документа"	, "Контрагент");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "ДоговорКонтрагента"		, "Договор контрагента"		, "Из поля XML документа"	, "Договор контрагента");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "СтруктурнаяЕдиница"		, "Банк/касса"				, "Из поля XML документа"	, "Банковский счет организации");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "СкладГруппа"				, "Склад группа"			, "Из поля XML документа"	, "Склад");
			
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "ВалютаДокумента"			, "Валюта документа"		, "Из поля XML документа"	, "Валюта");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "КратностьВзаиморасчетов"	, "Кратность взаиморасчетов", "Фиксированное значение"	, 1);
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "КурсВзаиморасчетов"		, "Курс взаиморасчетов"		, "Из поля XML документа"	, "Курс взаиморасчетов");
			
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Ответственный"			, "Ответственный"			, "Фиксированное значение"	, Справочники.Пользователи.ПустаяСсылка());
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Подразделение"			, "Подразделение"			, "Фиксированное значение"	, Справочники.Подразделения.ПустаяСсылка());
			
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "АдресДоставки"			, "Адрес доставки"			, "Из поля XML документа"	, "Адрес доставки");
			

			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "УчитыватьНДС"				, "Учитывать НДС"			, "Из поля XML документа"	, "Учитывать НДС");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "СуммаВключаетНДС"			, "Сумма включает НДС"		, "Из поля XML документа"	, "Сумма включает НДС");
			
			
			
			//////////////////
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "Товары", "Товары", "Номенклатура"		, "Номенклатура"		, "Из поля XML документа", "Номенклатура");
			
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "Товары", "Товары", "ХарактеристикаНоменклатуры"	, "Характеристика номенклатуры"		, "Из поля XML документа", "Характеристика номенклатуры");
			
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "Товары", "Товары", "СтавкаНДС"			, "СтавкаНДС"			, "Из поля XML документа", "Ставка НДС");
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "Товары", "Товары", "Количество"		, "Количество"			, "Из поля XML документа", "Количество");
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "Товары", "Товары", "Коэффициент"		, "Коэффициент"			, "Из поля XML документа", "Коэффициент");
			
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "Товары", "Товары", "ЕдиницаИзмерения"	, "Единица измерения"	, "Из поля XML документа", "Единица измерения");
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "Товары", "Товары", "Цена"				, "Цена"				, "Из поля XML документа", "Цена");
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "Товары", "Товары", "Сумма"				, "Сумма позиции"		, "Из поля XML документа", "Сумма позиции");
			
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "Товары", "Товары", "ПроцентСкидкиНаценки", "Процент скидки или наценки", "Из поля XML документа", "Процент скидки или наценки");
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "Товары", "Товары", "Размещение"		, "Размещение"			, "Из поля XML документа", "Склад");
			
			
			//////////////////
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "Услуги", "Товары", "Номенклатура"		, "Номенклатура"		, "Из поля XML документа", "Номенклатура");
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "Услуги", "Товары", "Содержание"		, "Содержание"			, "Из поля XML документа", "Содержание номенклатуры");
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "Услуги", "Товары", "СтавкаНДС"			, "СтавкаНДС"			, "Из поля XML документа", "Ставка НДС");
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "Услуги", "Товары", "Количество"		, "Количество"			, "Из поля XML документа", "Количество");
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "Услуги", "Товары", "Цена"				, "Цена"				, "Из поля XML документа", "Цена");
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "Услуги", "Товары", "Сумма"				, "Сумма позиции"		, "Из поля XML документа", "Сумма позиции");
			
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "Услуги", "Товары", "ПроцентСкидкиНаценки", "Процент скидки или наценки", "Из поля XML документа", "Процент скидки или наценки");
			
		ИначеЕсли Документ = "ПриходныйКассовыйОрдер" тогда  
			
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Дата"						, "Дата"					, "Из поля XML документа"	, "Дата с сайта с учетом настройки обмена");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Б_Идентификатор"			, "Идентификатор битрикс"	, "Из поля XML документа"	, "Номер с сайта");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Б_ДатаДокумента"			, "Дата документа Битрикс"	, "Из поля XML документа"	, "Дата с сайта");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Б_НомерВерсии"			, "Номер версии Битрикс"	, "Из поля XML документа"	, "Номер версии с сайта");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "ПометкаУдаления"			, "Пометка удаления"		, "Из поля XML документа"	, "Пометка удаления");
			
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Комментарий"				, "Комментарий"				, "Из поля XML документа"	, "Комментарий");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Организация"				, "Организация"				, "Фиксированное значение"	, Справочники.Организации.ПустаяСсылка());
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Ответственный"			, "Ответственный"			, "Фиксированное значение"	, Справочники.Пользователи.ПустаяСсылка());
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Подразделение"			, "Подразделение"			, "Фиксированное значение"	, Справочники.Подразделения.ПустаяСсылка());
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Контрагент"				, "Контрагент"				, "Из поля XML документа"	, "Контрагент");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "ДоговорКонтрагента"		, "Договор контрагента"		, "Из поля XML документа"	, "Договор контрагента");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Касса"					, "Касса"					, "Из поля XML документа"	, "Касса");

			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "ВидОперации"				, "Вид операции"			, "Фиксированное значение"	, Перечисления.ВидыОперацийПКО.ОплатаПокупателя);
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "СчетОрганизации"			, "Счет организации"		, "Из поля XML документа"	, "Банковский счет организации");
			
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "СтатьяДвиженияДенежныхСредств", "Статья движения денежных средств", "Фиксированное значение", Справочники.СтатьиДвиженияДенежныхСредств.ОплатаПокупателя);
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "ОтражатьВУправленческомУчете"	, "Отражать в управленческом учете"	, "Фиксированное значение", Истина);
			
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "СуммаДокумента"			, "Сумма документа"			, "Из поля XML документа"	, "Сумма");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "ВалютаДокумента"			, "Валюта документа"		, "Из поля XML документа"	, "Валюта");
	
			
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "ДокументОснование"		, "Документ основание"		, "Из поля XML документа"	, "Основание");
			
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Оплачено"					, "Оплачено"				, "Фиксированное значение"	, Истина);
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "СтавкаНДС"				, "Ставка НДС"				, "Из поля XML документа"	, "Ставка НДС по первому товару");
			
			
			//////////////////
			
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "РасшифровкаПлатежа", "", "ДоговорКонтрагента"	, "Договор контрагента"	, "Из поля XML документа"	, "Договор контрагента");
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "РасшифровкаПлатежа", "", "СтавкаНДС"			, "Ставка НДС"			, "Из поля XML документа"	, "Ставка НДС по первому товару");
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "РасшифровкаПлатежа", "", "СуммаНДС"			, "Сумма НДС"			, "Из поля XML документа"	, "Сумма НДС");
			
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "РасшифровкаПлатежа", "", "СуммаПлатежа"		, "Сумма платежа"		, "Из поля XML документа"	, "Сумма");
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "РасшифровкаПлатежа", "", "КратностьВзаиморасчетов"	, "Кратность взаиморасчетов", "Фиксированное значение"	, 1);
			
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "РасшифровкаПлатежа", "", "КурсВзаиморасчетов"	, "Курс взаиморасчетов", "Из поля XML документа"	, "Курс взаиморасчетов");
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "РасшифровкаПлатежа", "", "СуммаВзаиморасчетов"	, "Сумма взаиморасчетов", "Из поля XML документа"	, "Сумма");
			
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "РасшифровкаПлатежа", "", "Сделка"				, "Сделка"				, "Из поля XML документа"	, "Основание");
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "РасшифровкаПлатежа", "", "ДокументРасчетовСКонтрагентом", "Документ расчетов с контрагентом", "Из поля XML документа"	, "Документ расчетов с контрагентом");
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "РасшифровкаПлатежа", "", "СтатьяДвиженияДенежныхСредств", "Статья движения денежных средств", "Фиксированное значение"	, Справочники.СтатьиДвиженияДенежныхСредств.ОплатаПокупателя);
			
		ИначеЕсли Документ = "ОплатаОтПокупателяПлатежнойКартой" тогда  
			
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Дата"						, "Дата"					, "Из поля XML документа"	, "Дата с сайта с учетом настройки обмена");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Б_Идентификатор"			, "Идентификатор битрикс"	, "Из поля XML документа"	, "Номер с сайта");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Б_ДатаДокумента"			, "Дата документа Битрикс"	, "Из поля XML документа"	, "Дата с сайта");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Б_НомерВерсии"			, "Номер версии Битрикс"	, "Из поля XML документа"	, "Номер версии с сайта");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "ПометкаУдаления"			, "Пометка удаления"		, "Из поля XML документа"	, "Пометка удаления");
			
			
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Организация"				, "Организация"				, "Фиксированное значение"	, Справочники.Организации.ПустаяСсылка());
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Подразделение"			, "Подразделение"			, "Фиксированное значение"	, Справочники.Подразделения.ПустаяСсылка());
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Контрагент"				, "Контрагент"				, "Из поля XML документа"	, "Контрагент");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "ВидОперации"				, "Вид операции"			, "Фиксированное значение"	, Перечисления.ВидыОперацийОплатаОтПокупателяПлатежнойКартой.ОплатаПокупателя);
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "СуммаДокумента"			, "Сумма документа"			, "Из поля XML документа"	, "Сумма");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Ответственный"			, "Ответственный"			, "Фиксированное значение"	, Справочники.Пользователи.ПустаяСсылка());
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Комментарий"				, "Комментарий"				, "Из поля XML документа"	, "Комментарий");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "ДокументОснование"		, "Документ основание"		, "Из поля XML документа"	, "Основание");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "ДоговорЭквайринга"		, "Договор эквайринга"		, "Из поля XML документа"	, "Договор эквайринга");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "ВалютаДокумента"			, "Валюта документа"		, "Из поля XML документа"	, "Валюта");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "ОтражатьВУправленческомУчете", "Отражать в управленческом учете", "Фиксированное значение", Истина);
			
			
			//////////////////
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "РасшифровкаПлатежа", "", "ДоговорКонтрагента"	, "Договор контрагента"	, "Из поля XML документа"	, "Договор контрагента");
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "РасшифровкаПлатежа", "", "Сделка"				, "Сделка"				, "Из поля XML документа"	, "Основание");
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "РасшифровкаПлатежа", "", "КурсВзаиморасчетов"	, "Курс взаиморасчетов"	, "Из поля XML документа"	, "Курс взаиморасчетов");
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "РасшифровкаПлатежа", "", "СуммаПлатежа"		, "Сумма платежа"		, "Из поля XML документа"	, "Сумма");
			
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "РасшифровкаПлатежа", "", "КратностьВзаиморасчетов"			, "Кратность взаиморасчетов"		, "Фиксированное значение"	, 1);
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "РасшифровкаПлатежа", "", "ДокументРасчетовСКонтрагентом"	, "Документ расчетов с контрагентом", "Из поля XML документа"	, "Документ расчетов с контрагентом");
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "РасшифровкаПлатежа", "", "СтатьяДвиженияДенежныхСредств"	, "Статья движения денежных средств", "Фиксированное значение"	, Справочники.СтатьиДвиженияДенежныхСредств.ОплатаПокупателя);
			
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "РасшифровкаПлатежа", "", "СуммаВзаиморасчетов"	, "Сумма взаиморасчетов", "Из поля XML документа"	, "Сумма");
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "РасшифровкаПлатежа", "", "СтавкаНДС"			, "Ставка НДС"			, "Из поля XML документа"	, "Ставка НДС по первому товару");
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "РасшифровкаПлатежа", "", "СуммаНДС"			, "Сумма НДС"			, "Из поля XML документа"	, "Сумма НДС");
			
		ИначеЕсли Документ = "РеализацияТоваровУслуг" тогда  
			
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Дата"						, "Дата"					, "Из поля XML документа"	, "Дата с сайта с учетом настройки обмена");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Б_Идентификатор"			, "Идентификатор битрикс"	, "Из поля XML документа"	, "Номер с сайта");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Б_ДатаДокумента"			, "Дата документа Битрикс"	, "Из поля XML документа"	, "Дата с сайта");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Б_НомерВерсии"			, "Номер версии Битрикс"	, "Из поля XML документа"	, "Номер версии с сайта");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "ПометкаУдаления"			, "Пометка удаления"		, "Из поля XML документа"	, "Пометка удаления");
			
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "ВидОперации"				, "Вид операции"			, "Фиксированное значение"	, Перечисления.ВидыОперацийРеализацияТоваров.ПродажаКомиссия);
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "ВидПередачи"				, "Вид передачи"			, "Фиксированное значение"	, Перечисления.ВидыПередачиТоваров.СоСклада);
			
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Комментарий"				, "Комментарий"				, "Из поля XML документа"	, "Комментарий");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Организация"				, "Организация"				, "Фиксированное значение"	, Справочники.Организации.ПустаяСсылка());
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Контрагент"				, "Контрагент"				, "Из поля XML документа"	, "Контрагент");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "ДоговорКонтрагента"		, "Договор контрагента"		, "Из поля XML документа"	, "Договор контрагента");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Склад"					, "Склад"					, "Из поля XML документа"	, "Склад");
			
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Ответственный"			, "Ответственный"			, "Фиксированное значение"	, Справочники.Пользователи.ПустаяСсылка());
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Подразделение"			, "Подразделение"			, "Фиксированное значение"	, Справочники.Подразделения.ПустаяСсылка());
			
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "УчитыватьНДС"				, "Учитывать НДС"			, "Из поля XML документа"	, "Учитывать НДС");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "СуммаВключаетНДС"			, "Сумма включает НДС"		, "Из поля XML документа"	, "Сумма включает НДС");
		
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "ОтражатьВУправленческомУчете", "Отражать в управленческом учете", "Фиксированное значение", Истина);
			
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "ВалютаДокумента"			, "Валюта документа"		, "Из поля XML документа"	, "Валюта");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "КратностьВзаиморасчетов"	, "Кратность взаиморасчетов", "Фиксированное значение"	, 1);
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "КурсВзаиморасчетов"		, "Курс взаиморасчетов"		, "Из поля XML документа"	, "Курс взаиморасчетов");
		
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "АдресДоставки"			, "Адрес доставки"			, "Из поля XML документа"	, "Адрес доставки");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Сделка"					, "Сделка"					, "Из поля XML документа"	, "Основание");
			
			
			//////////////////
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "Товары", "Товары", "Номенклатура"		, "Номенклатура"		, "Из поля XML документа", "Номенклатура");
			
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "Товары", "Товары", "ХарактеристикаНоменклатуры"	, "Характеристика номенклатуры"		, "Из поля XML документа", "Характеристика номенклатуры");
			
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "Товары", "Товары", "СтавкаНДС"			, "СтавкаНДС"			, "Из поля XML документа", "Ставка НДС");
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "Товары", "Товары", "Количество"		, "Количество"			, "Из поля XML документа", "Количество");
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "Товары", "Товары", "Коэффициент"		, "Коэффициент"			, "Из поля XML документа", "Коэффициент");
			
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "Товары", "Товары", "ЕдиницаИзмерения"	, "Единица измерения"	, "Из поля XML документа", "Единица измерения");
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "Товары", "Товары", "Цена"				, "Цена"				, "Из поля XML документа", "Цена");
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "Товары", "Товары", "Сумма"				, "Сумма позиции"		, "Из поля XML документа", "Сумма позиции");
			
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "Товары", "Товары", "ПроцентСкидкиНаценки", "Процент скидки или наценки", "Из поля XML документа", "Процент скидки или наценки");
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "Товары", "Товары", "СпособСписанияОстаткаТоваров", "Способ списания остатка товаров", "Фиксированное значение", Перечисления.СпособыСписанияОстаткаТоваров.СоСклада);
			
			
			//////////////////
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "Услуги", "Товары", "Номенклатура"		, "Номенклатура"		, "Из поля XML документа", "Номенклатура");
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "Услуги", "Товары", "Содержание"		, "Содержание"			, "Из поля XML документа", "Содержание номенклатуры");
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "Услуги", "Товары", "СтавкаНДС"			, "СтавкаНДС"			, "Из поля XML документа", "Ставка НДС");
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "Услуги", "Товары", "Количество"		, "Количество"			, "Из поля XML документа", "Количество");
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "Услуги", "Товары", "Цена"				, "Цена"				, "Из поля XML документа", "Цена");
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "Услуги", "Товары", "Сумма"				, "Сумма позиции"		, "Из поля XML документа", "Сумма позиции");
			
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "Услуги", "Товары", "ПроцентСкидкиНаценки", "Процент скидки или наценки", "Из поля XML документа", "Процент скидки или наценки");
			
		КонецЕсли;	
		
	КонецЦикла;
	
	Результат = Новый Структура;
	Результат.Вставить("ДокументыЗагрузки",ТзнДок);
	Результат.Вставить("ВсеСоответствияТабличныхЧастейДокументов",ТзнТЧ);
	Результат.Вставить("ВсеСоответствияШапокДокументов",ТзнШапки);
	
	Возврат  Результат;
	
КонецФункции

Процедура ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТаблицаЗначений, Документ, ТабличнаяЧасть, ПолеXML, НаименованиеРеквизита1С, СинонимРеквизита1С, ТипДанных, Значение)
	
	НайденныеСтроки = ТаблицаЗначений.НайтиСтроки(Новый Структура("Документ, ПолеXML, НаименованиеРеквизита1С", Документ, ТабличнаяЧасть, НаименованиеРеквизита1С));
	
	Если НайденныеСтроки.Количество() = 0 тогда
		НоваяСтрока = ТаблицаЗначений.Добавить();
		
		НоваяСтрока.Документ 		= Документ;
		НоваяСтрока.ТабличнаяЧасть	= ТабличнаяЧасть;
		НоваяСтрока.ПолеXML 		= ПолеXML;
		
		НоваяСтрока.ТипДанных 		= ТипДанных;
		НоваяСтрока.Значение 		= Значение;
		
		НоваяСтрока.СинонимРеквизита1С 		= СинонимРеквизита1С;
		НоваяСтрока.НаименованиеРеквизита1С = НаименованиеРеквизита1С;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнениеСтрокиДокументаПоУмолчанию(ТаблицаЗначений, Документ, НаименованиеРеквизита1С, СинонимРеквизита1С, ТипДанных, Значение)
	
	НайденныеСтроки = ТаблицаЗначений.НайтиСтроки(Новый Структура("Документ, НаименованиеРеквизита1С", Документ, НаименованиеРеквизита1С));
	
	Если НайденныеСтроки.Количество() = 0 тогда
		НоваяСтрока = ТаблицаЗначений.Добавить();
		
		НоваяСтрока.Документ 		= Документ;
		
		НоваяСтрока.ТипДанных 		= ТипДанных;
		НоваяСтрока.Значение 		= Значение;
		
		НоваяСтрока.СинонимРеквизита1С 		= СинонимРеквизита1С;
		НоваяСтрока.НаименованиеРеквизита1С = НаименованиеРеквизита1С;
		
	КонецЕсли;
	
КонецПроцедуры

