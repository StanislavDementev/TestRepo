
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	АдресКлючейЗаписейРегистра = Параметры.АдресКлючейЗаписейРегистра;
	КлючиЗаписейРегистраНастроек = ПолучитьИзВременногоХранилища(АдресКлючейЗаписейРегистра);
	
	Для каждого КлючРегистраНастрой Из КлючиЗаписейРегистраНастроек Цикл
	
		МенеджерЗаписи = РегистрыСведений.Clouddep_НастройкиАвтозаполненияСоставаГруппыПочтовойРассылки.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи, КлючРегистраНастрой);
		
		МенеджерЗаписи.Прочитать();
		Если Не МенеджерЗаписи.Выбран() Тогда
			Продолжить;
		КонецЕсли;
		
		ПользовательскаяНастройка = МенеджерЗаписи.Настройка.Получить();
		Если ПользовательскаяНастройка=Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ПолучитьСписокКонтактовПоПользовательскойНастройке(ПользовательскаяНастройка);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьСписокКонтактовПоПользовательскойНастройке(ПользовательскаяНастройка)
	СхемаКД = РегистрыСведений.Clouddep_НастройкиАвтозаполненияСоставаГруппыПочтовойРассылки.ПолучитьМакет("СхемаПодбораКонтрагентов");
	
	НастройкаКД = СхемаКД.НастройкиПоУмолчанию;
	
	ИсточникДоступныхНастроек = Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКД);
	
	КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
	КомпоновщикНастроек.Инициализировать(ИсточникДоступныхНастроек);
	КомпоновщикНастроек.ЗагрузитьНастройки(НастройкаКД);
	КомпоновщикНастроек.ЗагрузитьПользовательскиеНастройки(ПользовательскаяНастройка);
	
	Настройки = КомпоновщикНастроек.ПолучитьНастройки();
	
	//ЭлементОтбора = Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//ЭлементОтбора.ЛевоеЗначение = "Контрагент.ЭтоГруппа";
	//ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	//ЭлементОтбора.ПравоеЗначение = Ложь;
	//ЭлементОтбора.Использование = Истина;
	//
	//ЭлементОтбора = Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//ЭлементОтбора.ЛевоеЗначение = "Контрагент.ПометкаУдаления";
	//ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	//ЭлементОтбора.ПравоеЗначение = Ложь;
	//ЭлементОтбора.Использование = Истина;
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКД, Настройки, , , Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	
	ТаблицаРезультата = Новый ТаблицаЗначений;
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ПроцессорВывода.УстановитьОбъект(ТаблицаРезультата);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	Для каждого СтрокаРезультата Из ТаблицаРезультата Цикл
		Если СтрокаРезультата.Контрагент.ЭтоГруппа Тогда
			Продолжить;
		КонецЕсли;
		
		Если СтрокаРезультата.Контрагент.ПометкаУдаления Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = ПодобранныеКонтакты.Добавить();
		НоваяСтрока.Контакт = СтрокаРезультата.Контрагент;
	КонецЦикла;

КонецПроцедуры // ПолучитьСписокКонтактовПоПользовательскойНастройке()
